# A transducer mapping Georgian textual cardinals and ordinals to numbers.

# for Roman and letter numerals see syntax.regex

define card2x7 [
        {2}:{ორ}
      | {3}:{სამ}
      | {4}:{ოთხ}
      | {5}:{ხუთ}
      | {6}:{ექuს}
      | {7}:{შვიდ} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define card2x7alphFin [
        {ორ·ი}:{ორ}
      | {სამ·ი}:{სამ}
      | {ოთხ·ი}:{ოთხ}
      | {ხუთ·ი}:{ხუთ}
      | {ექuს·ი}:{ექuს}
      | {შვიდ·ი}:{შვიდ} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define card2x7alph [
        {ორ}
      | {სამ}
      | {ოთხ}
      | {ხუთ}
      | {ექuს}
      | {შვიდ} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define card2x7i [
        {2}:{ორი}
      | {3}:{სამი}
      | {4}:{ოთხი}
      | {5}:{ხუთი}
      | {6}:{ექuსი}
      | {7}:{შვიდი} ];

# obsolete?
#define card2x7ialphFin [
#        {ორ·ი}:{ორი}
#      | {სამ·ი}:{სამი}
#      | {ოთხ·ი}:{ოთხი}
#      | {ხუთ·ი}:{ხუთი}
#      | {ექuს·ი}:{ექuსი}
#      | {პვიდ·ი}:{შვიდი} ];

define card2x7ialph [
        {ორი}
      | {სამი}
      | {ოთხი}
      | {ხუთი}
      | {ექuსი}
      | {შვიდი} ];

define card8x9 [
      "@C.SyncStem@"
      [ {8}:{რვა} "@U.SyncStem.-@"
      | {9}:{ცხრა} "@U.SyncStem.-@"
      | {8}:{რვ} "@U.SyncStem.+@"
      | {9}:{ცხრ} "@U.SyncStem.+@" ]
      "@C.StemType@" "@U.StemType.ა@" ];

# ხრას Gen is wrong!
define card8x9alphFin [
      "@C.SyncStem@"
      [ {რვ[ა]·ჲ}:{რვა} "@U.SyncStem.-@"
      | {ცხრ[ა]·ჲ}:{ცხრა} "@U.SyncStem.-@"
      | {რვ[ა]·ჲ}:{რვ} "@U.SyncStem.+@"
      | {ცხრ[ა]·ჲ}:{ცხრ} "@U.SyncStem.+@" ]
      "@C.StemType@" "@U.StemType.ა@" ];

define card8x9alph [
      "@C.SyncStem@"
      [ {რვა} "@U.SyncStem.-@"
      | {ცხრა} "@U.SyncStem.-@"
      | {რვ} "@U.SyncStem.+@"
      | {ცხრ} "@U.SyncStem.+@" ]
      "@C.StemType@" "@U.StemType.ა@" ];

define card2x9 [
        card2x7
      | card8x9 ];

define card2x9alphFin [
        card2x7alphFin
      | card8x9alphFin ];

define card2x9alph [
        card2x7alph
      | card8x9alph ];

define card2x9a [
        card2x7
      | card8x9 "@U.SyncStem.-@" ];

define card2x9aalph [
        card2x7alph
      | card8x9alph "@U.SyncStem.-@" ];

define card2x9i [
        card2x7i
      | card8x9 "@U.SyncStem.-@" ];

define card2x9ialph [
        card2x7ialph
      | card8x9alph "@U.SyncStem.-@" ];

#define card2x9ialphFin [
#        card2x7ialphFin
#      | card8x9alphFin "@U.SyncStem.-@" ];

define card01x09 [
        {01}:{ერთ} "@C.SyncStem@" "@P.StemType.c@"
      | {0}:0 card2x9 ];

define card01x09alph [
        {ერთ} "@C.SyncStem@" "@P.StemType.c@"
      | card2x9alph ];

define card01x09alphFin [
        {ერთ·ი}:{ერთ} "@C.SyncStem@" "@P.StemType.c@"
      | card2x9alphFin ];

define card00x09 [
        {00}:0
      | card01x09 ];

define card00x09alph [
        0
      | card01x09alph ];

define card00x09alphFin [
      # 0 |
      	card01x09alphFin ];

define card01x09i [
        {01}:{ერთი}
      | {0}:0 card2x9i ];

define card01x09ialph [
        {ერთი}
      | card2x9ialph ];

# not used?
define card00x09i [
        {00}:0
      | card01x09i ];

define card11x19 [
      [ [ ( 0:{ა} "@U.Lang.og@" ) {11}:{თერთ}
        | ( 0:{ა} "@U.Lang.og@" ) {12}:{თორ}
        | [ 0:{ათ} "@U.Lang.og@" {13}:[{ცა}|{სა}|{სამ}] | {13}:{ცა} ]
        | ( 0:{ა} "@U.Lang.og@" ) {14}:{თოთხ}
        | [ 0:{ა} "@U.Lang.og@" | "@U.Lang.ng@" ] {15}:{თხუთ}
        | ( 0:{ა} "@U.Lang.og@" ) {16}:{თექვს}
        | ( 0:{ათ} "@U.Lang.og@" ) {17}:{ჩვიდ}
        | [ ( 0:{ა} ) "@U.Lang.og@" {18}:{თრვა} | "@U.Lang.ng@" {18}:{თვრა} ]
        | ( 0:{ა} (0:{თ}) "@U.Lang.og@" ) {19}:{ცხრა} ]
        0:{მეტ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
      | {10}:{ათ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ];

define card10x19alph [
      [ [ ( 0:{ა} "@U.Lang.og@" ) {თერთ}
        | ( 0:{ა} "@U.Lang.og@" ) {თორ}
        | [ 0:{ათ} "@U.Lang.og@" [{ცა}|{სა}|{სამ}] | {ცა} ]
        | ( 0:{ა} "@U.Lang.og@" ) {თოთხ}
        | [ 0:{ა} "@U.Lang.og@" | "@U.Lang.ng@" ] {თხუთ}:[{თხუთ}|{ხუთ}]
        | ( 0:{ა} "@U.Lang.og@" ) {თექვს}
        | ( 0:{ათ} "@U.Lang.og@" ) {ჩვიდ}
        | [ ( 0:{ა} ) "@U.Lang.og@" {თრვა} | "@U.Lang.ng@" {თვრა} ]
        | ( 0:{ა} (0:{თ}) "@U.Lang.og@" ) {ცხრა} ]
        {მეტ} ]
      | {ათ} ]
      "@C.SyncStem@" "@P.StemType.c@" ;

define card10x19alphFin [
      [ [ ( 0:{ა} "@U.Lang.og@" ) {თერთ}
        | ( 0:{ა} "@U.Lang.og@" ) {თორ}
        | [ 0:{ათ} "@U.Lang.og@" [{ცა}|{სა}|{სამ}] | {ცა} ]
        | ( 0:{ა} "@U.Lang.og@" ) {თოთხ}
        | [ 0:{ა} "@U.Lang.og@" | "@U.Lang.ng@" ] {თხუთ}:[{თხუთ}|{ხუთ}]
        | ( 0:{ა} "@U.Lang.og@" ) {თექვს}
        | ( 0:{ათ} "@U.Lang.og@" ) {ჩვიდ}
        | [ ( 0:{ა} ) "@U.Lang.og@" {თრვა} | "@U.Lang.ng@" {თვრა} ]
        | ( 0:{ა} (0:{თ}) "@U.Lang.og@" ) {ცხრა} ]
        {მეტ·ი}:{მეტ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
      | {ათ·ი}:{ათ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ];

define card20x80 [
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      [ {20}:{ოც}
      | {40}:{ორმოც}
      | {60}:{სამოც}
      | {80}:{ოთხმოც} ]
      ];

define card20x80alph [
      #"@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      [ {ოც}
      | {ორმოც}
      | {სამოც}
      | {ოთხმოც}
      | {ორმოც}:{ორმეოც} "@U.Lang.og@"
      | {სამოც}:[{სამ}(მ){ეოც}] "@U.Lang.og@"
      | {ოთხმოც}:{ოთხმეოც} "@U.Lang.og@" ]
      "@U.StemType.c@"
      ];
      
define card20x80alphFin [
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      [ {ოც}
      | {ორმოც}
      | {სამოც}
      | {ოთხმოც}
      | {ორმოც}:{ორმეოც} "@U.Lang.og@"
      | {სამოც}:[{სამ}(მ){ეოც}] "@U.Lang.og@"
      | {ოთხმოც}:{ოთხმეოც} "@U.Lang.og@" ]
      {·ი}:0
      ];
      
define card100x900 [
        {1}:{ას}
      | card2x9a 0:{ას} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define card100x900alph [
        {ას}
      | card2x9aalph {ას} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define card100x900alphFin [
      ( card2x9aalph ) {ას·ი}:{ას} ]
      "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@";

define ord100x900 [
        {1}:{მეასე}
      | 0:{მე} card2x9a 0:{ასე} ]
      "@C.SyncStem@" "@P.StemType.ე@";

define ord100x900alph   [ {მეას[ე]·ჲ}:{მეასე} | {მე} card2x9aalph {ას[ე]·ჲ}:{ასე} ]
       		        "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.-@"
		      | [ {მეას[ე]·ჲ}:{მეას} | {მე} card2x9aalph {ას[ე]·ჲ}:{ას} ]
       		        "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.+@"
		      ;

define frac100x900alph  [ {მეასედ·ი}:{მეასედ} | {მე} card2x9aalph {ასედ·ი}:{ასედ} ]
       		        "@C.SyncStem@" "@P.StemType.c@" ;

define ord1000x9000   [ {1}:{მეათასე} | 0:{მე} card2x9a 0:{ათასე} ]
       		      "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.-@"
		    | [ {1}:{მეათას} | 0:{მე} card2x9a 0:{ათას} ]
       		      "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.+@"
		    ;

define ord1000x9000alph   [ {მეათას[ე]·ჲ}:{მეათასე} | {მე} card2x9aalph {ათას[ე]·ჲ}:{ათასე} ]
       			  "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.-@"
			| [ {მეათას[ე]·ჲ}:{მეათას} | {მე} card2x9aalph {ათას[ე]·ჲ}:{ათას} ]
       			  "@C.SyncStem@" "@P.StemType.ე@" "@U.SyncStem.+@"
			;

define merge [
        [ 0 <-  {0} "+Da" {0}  ]
      | [ 3 <- {20} "+Da" {1} ]
      | [ 5 <- {40} "+Da" {1} ]
      | [ 7 <- {60} "+Da" {1} ]
      | [ 9 <- {80} "+Da" {1} ]
      ];

define card00x99 [
     ~[ ?* "+Da" ?* ]
     .o.
     merge
     .o.
     [ card00x09
     | card11x19
     | card20x80
     | card20x80 "+Da":{და} [ card01x09 | card11x19 ]]
     ];

define card00x99alph [
     [ card00x09alph
     | card10x19alph
     | card20x80alph
     | card20x80alph {და} [ card01x09alph | card10x19alph ]]
     ];

define card00x99alphFin [
     [ card00x09alphFin
     | card10x19alphFin
     | card20x80alphFin
     | card20x80alph {და} [ card01x09alphFin | card10x19alphFin ]]
     ];

define card01x99 [
     ~[ ?* "+Da" ?* ]
     .o.
     merge
     .o.
     [ card01x09
     | card11x19
     | card20x80
     | card20x80 "+Da":{და} [ card01x09 | card11x19 ]]
     ];

define card01x99alph [
     [ card01x09alph
     | card10x19alph
     | card20x80alph
     | card20x80alph {და} [ card01x09alph | card10x19alph ]]
     ];

define card01x99alphFin [
     [ card01x09alphFin
     | card10x19alphFin
     | card20x80alphFin
     | card20x80alph {და} [ card01x09alphFin | card10x19alphFin ]]
     ];

define ord00x99 [
     ~[ ?* "+Da" ?* ]
     .o.
     merge
     .o.
     [ 0:{მე}
       [ card01x09 "@U.SyncStem.+@"
       | card11x19
       | card20x80 ]
       0:{ე} "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@"
     | card20x80 "+Da":{დამე} [ card01x09 "@U.SyncStem.+@" | card11x19 ] 0:{ე} "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@" ]
     ];

define ord00x99alph [
       {მე}
       [ card01x09alph "@U.SyncStem.+@"
       | card10x19alph
       | card20x80alph ]
       [ {[ე]·ჲ}:{ე} "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@" "@U.SyncStem.-@"
       | {[ე]·ჲ}:0   "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@" "@U.SyncStem.+@" ]
     | card20x80alph {დამე}
       [ card01x09alph "@U.SyncStem.+@" | card10x19alph ]
       [ {[ე]·ჲ}:{ე} "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@" "@U.SyncStem.-@"
       | {[ე]·ჲ}:0   "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@" "@U.SyncStem.+@" ]
     ] ;

define frac00x99alph [
       {მე}
       [ card01x09alph "@U.SyncStem.+@"
       | card10x19alph
       | card20x80alph ]
       [ {ედ·ი}:{ედ} "@C.SyncStem@" "@P.StemType.c@" ]
     | card20x80alph {დამე}
       [ card01x09alph "@U.SyncStem.+@" | card10x19alph ]
       [ {ედ·ი}:{ედ} "@C.SyncStem@" "@P.StemType.c@" ]
     ] ;

define card01x99i [
     ~[ ?* "+Da" ?* ]
     .o.
     merge
     .o.
     [ card01x09i
     | card11x19 0:{ი}
     | card20x80 0:{ი}
     | card20x80 "+Da":{და} [ card01x09i | card11x19 0:{ი} ]]
     ];

define card01x99ialph [
     [ card01x09ialph
     | card10x19alph {ი}
     | card20x80alph {ი}
     | card20x80alph {და} [ card01x09ialph | card10x19alph {ი} ]]
     ];

define card001x999 [
      [ card100x900 card00x99 | {0}:0 card01x99 ]
      | card100x900 {00}:0 ];

define card001x999alph [
        card100x900alph card00x99alph
      | card01x99alph
      | card100x900alph ];

define card001x999alphFin [
        card100x900alph card00x99alphFin
      | card100x900alphFin
      | card01x99alphFin
      | card100x900alphFin ];

define card001x999i [
      [ card100x900 | {0}:0 ] card01x99i
      | card100x900 {00}:{ი} ];

define card001x999ialph [
      [ card100x900alph | 0 ] card01x99ialph
      | card100x900alph {ი} ];

#define card001x999ialphFin [
#      ( card100x900alph ) card01x99ialphFin
#      | card100x900alphFin ];

define ord001x999 [
      [ card100x900 | {0}:0 ] ord00x99
      | ord100x900 {00}:0 ];

define ord001x999alph [
      [ card100x900alph | 0 ] ord00x99alph
      | ord100x900alph ];

define frac001x999alph [
      [ card100x900alph | 0 ] frac00x99alph
      | frac100x900alph ];

define card000001x999999 [
     [ [card001x999i | card001x999 ] 0:{ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
     | {001}:{ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
     [ card001x999 | {000}:0 ]
     | {000}:0 card001x999 ];

define card000001x999999alph [
     [ [card001x999ialph | card001x999alph ]
       {ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
     | {ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
     [ card001x999alph | 0 ]
     | card001x999alph ];

define card000001x999999alphFin [
     [ ( [card001x999ialph | card001x999alph ] )
       {ათას} # "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
        ]
     card001x999alphFin
   | [ ( [card001x999ialph | card001x999alph ] )
       {ათას·ი}:{ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
   | card001x999alphFin ];

define ord000001x999999 [
      [ [card001x999i | card001x999 ]  0:{ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      | {001}:{ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      | {000}:0 ]
      ord001x999
     | ord1000x9000 {000}:0 ] ;

define ord000001x999999alph [
      [ [card001x999ialph | card001x999alph ]  {ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      | {ათას} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@"
      | 0 ]
      ord001x999alph
     | ord1000x9000alph ] ;

define dropzeros [
     0 -> {0}* \/ .#. _
     ];

# better: without ~[{0} ?+] and:
# define dropzeros [ 0 <-@ {0}* || .#. _ ];

# modal -ve treated as part of stem: `orive' etc.
# TODO: make sure that suffixed -ve cannot coocur
define stemVeTest [
     [ 0:{ი} "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     {:ვე}:{ვე}
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@"
     "@D.ModSfx.ვე@"
     ] ;

define stemVe [
     [ {ივე} "@R.StemType.c@" | "@R.StemType.ა@" {ვე} | "@R.StemType.ე@" {ვე} ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.SyncStem@" "@P.StemType.v@"
     "@D.ModSfx.ვე@"
    | # nom, dat are attested (ორივს)
     [ {ივ} "@R.StemType.c@" | "@R.StemType.ა@" {ვ} | "@R.StemType.ე@" {ვ} ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.SyncStem@"
     "@P.StemType.v@" # sic!
     "@D.ModSfx.ვე@"
     [ "@U.CaseType.reduced@" | "@U.CaseType.full@" [ "@U.Case.nom@" | "@U.Case.dat@" ]]
    ] ;

define stemVeOld [
     [ 0:{ი} "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     0:{ვე}
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.StemType@" "@C.SyncStem@" "@U.StemType.ე@"
     "@U.ModSfx.ვე@"
     ] ;

# oriod(e)
define stemOde [
     [ {ი} "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     {ოდ}
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.StemType@" "@C.SyncStem@"
     [ {ე} "@U.StemType.ე@" | "@U.StemType.c@" ]
     "@U.Approx.+@"
     ] ;

define stemOdeOld [
     [ 0:{ი} "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     0:{ოდ}
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@C.StemType@" "@C.SyncStem@"
     [ 0:{ე} "@U.StemType.ე@" | "@U.StemType.c@" ]
     "@U.Approx.+@"
     ] ;

# ორნაირი; which feature? should be A!
define stemNair [
     [ "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     {ნაირ·ი}:{ნაირ} "@P.StemType.c@"
     "@U.Approx.+@"
     ] ;


# ornaHevar
define naHevar [
     [ "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@P.StemType.c@"
     [ {½}:{ნახევარ} "@P.SyncStem.-@"
     | {½}:{ნახევრ} "@P.SyncStem.+@" ]
     ] ;

define naHevarAlph [
     [ "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@P.StemType.c@"
     [ {ნახევ[ა]რ·ი}:{ნახევარ} "@P.SyncStem.-@"
     | {ნახევ[ა]რ·ი}:{ნახევრ} "@P.SyncStem.+@" ]
     ] ;

# orJerad
define Jerad [
     [ "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@P.StemType.c@"
     0:{ჯერად} "@C.SyncStem@" "@U.Repet.+@"
     ] ;

define JeradAlph [
     [ "@R.StemType.c@" | "@R.StemType.ა@" | "@R.StemType.ე@" ]
     [ "@R.SyncStem.-@" | "@D.SyncStem@" ]
     "@P.StemType.c@"
     {ჯერად·ი}:{ჯერად} "@C.SyncStem@" "@U.Repet.+@"
     ] ;

# distributive numerals
define cardAlphDistC [
        {ორ-ორ}
      | {სამ-სამ}
      | {ოთხ-ოთხ}
      | {ხუთ-ხუთ}
      | {ექuს-ექuს}
      | {შვიდ-შვიდ}
      | {ოც-ოც}
      | {ორმოც-ორმოც}
      | {სამოც-სამოც}
      | {ოთხმოც-ოთხმოც}
      | {ორმოც-ორმოც}:{ორმეოც-ორმეოც} "@U.Lang.og@"
      | {სამოც-სამოც}:[{სამ}(მ){ეოც}-{სამ}(მ){ეოც}] "@U.Lang.og@"
      | {ოთხმოც-ოთხმოც}:{ოთხმეოც-ოთხმეოც} "@U.Lang.og@"
      | {ას-ას}
      | {ათას-ათას} ]
      {·ი}:0
      # "@C.StemType@" "@C.SyncStem@"
      "@U.StemType.c@";

define cardAlphDistA [
      # "@C.SyncStem@"
      [ {რვა-რვ[ა]·ჲ}:{რვა-რვა} "@U.SyncStem.-@"
      | {ცხრა-ცხრ[ა]·ჲ}:{ცხრა-ცხრა} "@U.SyncStem.-@"
      | {რვა-რვ[ა]·ჲ}:{რვა-რვ} "@U.SyncStem.+@"
      | {ცხრა-ცხრ[ა]·ჲ}:{ცხრა-ცხრ} "@U.SyncStem.+@" ]
      # "@C.StemType@"
      "@U.StemType.ა@" ];

define Distr [ cardAlphDistC | cardAlphDistA ] ["+Num" "+Card" "+Alpha" "+Distr"]:0 ;

# not used?
define CardinalDigit [
     ~[{0} ?+]
     .o.
     dropzeros
     .o.
     card000001x999999 ]
     ( stemVeOld | stemOde | naHevar | (naHevar) Jerad ) # ??
     "+Num":0 ["+Card"|"+Ord"]:0 "+Alpha":0 ;

define Cardinal [
       card000001x999999alphFin |
       card000001x999999alph    [ ( stemVe ) stemNair
       				| stemOde
				| stemVe
				| naHevarAlph
				| ( naHevarAlph ) JeradAlph ]
     | {ბევრ·ი}:{ბევრ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" "@U.Lang.og@"
     ]
     "+Num":0 "+Card":0 "+Alpha":0 ;

# better ·ი on upper side?
define Range card000001x999999alph
       	     [ "@R.StemType.c@" 
	       [ {ი} # [ "@U.Case.nom@" | "@U.Case.gen@" | "@U.Case.inst@" ]
	       | {ი}:0 # [ "@U.Case.dat@" | "@U.Case.adv@" ]
	       | {ი}:{მა} "@U.Case.erg@" ]
	     | "@D.StemType.c@" ]
	     "-"
	     Cardinal "+Range":0 ;

define OrdinalDigit [
         ~[{0} ?+]
       	 .o.
     	 dropzeros
     	 .o.
     	 ord000001x999999
       | {1}:{პირველ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" ]
       ( stemVe )
       "+Num":0 "+Ord":0 "+Alpha":0;

define Ordinal [
         [ ord000001x999999alph
         | (card20x80alph {და}) {პირველ} {ი}:0
	   "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" "@U.Style.nonstandard@" ]
         ( stemVe )
         "+Num":0 "+Ord":0 "+Alpha":0 ]
       | {1}:{1-ლ} "@C.StemType@" "@C.SyncStem@" "@U.StemType.c@" # 1-ლი
         # ( stemVe ) fixme
         "+Num":0 "+Ord":0 "+Digits":0 ;

define Fraction [
         frac001x999alph
         "+Num":0 "+Frac":0 "+Alpha":0 ]
	 ;

# define CardinalDigits [ [0|1|2|3|4|5|6|7|8|9]+ ] ["+Card"|"+Ord"]:0 "+Digits":0;
# define CardinalDigits [ (["0"|1|2|3|4|5|6|7|8|9]+ ",") ["0"|1|2|3|4|5|6|7|8|9]+ ] "+Card":0 "+Digits":0;

# OBS: NumberStem is not used in the full morphology, but rather Cardinal/Ordinal
# See noun-splice.regex
define NumberStem [ 
       	   [ Cardinal | Range | Distr | Ordinal | Fraction ]
     	   [ "@R.StemType.c@" "+Cons":0 | "@R.StemType.ა@" "+A":0 | # for debugging
	     "@R.StemType.ე@" "+E":0 | "@R.StemType.v@" "+Vowel":0 ]
	   [ "@R.SyncStem.-@" "-Sync":0 | "@R.SyncStem.+@" "+Sync":0 | "@D.SyncStem@" ]
	   [ "@R.Approx.+@" "+Approx":0 | "@D.Approx.+@" ]
  	   [ "@R.Repet.+@" "+Repet":0 | "@D.Repet.+@" ]
	   ] ;

# -ჯერ: s. noun-splice.regex

# read regex Cardinal ;

read regex NumberStem ;

# read regex CardinalDigits ;

#echo eliminate flag StemType
#eliminate flag StemType

#read regex card01x99;

echo save stack numbers.fst
save defined numbers.vars
save stack numbers.fst
pop stack

# read regex card000001x999999alph;

# save stack card-alph.fst
