# NG

define upperNG       [0 <- "+CS"]
       	    	 .o. [ 0 <- [ "+Base" | "+Passive" | "+Causative" ] ]
		 .o. Alternation
           	 .o. CaseSyntax # expands "+CS"
	    	 .o. removeDisallowedForms
	   	 .o. ArgSyntax
	    	 .o. RemoveF
		 .o. Invert
		 ;

# debug OK
read regex Verb ;
save stack verb-morph-debug.fst
pop stack

define verbMorphNG  [ upperNG .o. Verb ] ( (0:"-") [ "+Encl:მდა":{მდა}  | "+Encl:რა":{რა} ] ) ;

# debug
read regex verbMorphNG ;
save stack verb-morph-ng-debug.fst
pop stack

define normalizeNGTags      [ 0 <- "+NG" ]
	    		.o. [ 0 <- "+VPart" ]
	    		.o. [ 0 <- "+[Incl]" ]
	    		.o. [ 0 <- "+[Excl]" ]
			# relatives
			.o. [ "+Rel:ც" <- "+Encl:ც" "+Foc"  || "+Rel" ?* _ ]
 			.o. [ "+Rel" <- "+Int"  || ["+Pron" | "+Adv" ] _ ?* "+Encl:ც" "+Foc" ]
			.o. [ "+Rel" (<-) "+Int"  || "+Pron" "+Poss" _ ] # 
			.o. [ "+Rel" (<-) "+Int"  || "რომ[ე]ლ·ი" "+Pron" _ ]  # 
			.o. [ "+Rel" (<-) "+Int"  || "+Pron" _ "+Gen" ]  # needed? რომლის დედაც
	    		# there is no absolutive case
			.o. [ \"+Abs"* ]
			# Dir and Gen coincide
			.o. [ "+Gen" <- "+Dir"]
	    		.o. [ \"+OG"* ] # remove OG-only forms
			.o. [ ვ <- u ]
   	  		.o. [ ვ <- v ]
			.o. [ ხ <- ჴ ]
			.o. [ 0 <- ჲ ]
			.o. [ ე <- [ჱ|e] ]
			.o. [ "{""ი""}" <- {I} ]
			.o. [ 0	<- {][} ]
			.o. [ {[ე]} <- {E} ]
			.o. [ {[ა]} <- {A} ]
			.o. [ {[ვ]} <- {V} ]
			# .o. AtoAdv
			.o. [ 0 <- {·ჲ} || _ [ "+N" | "+A" | "+Pron" | "+Num" | "/" ] ]
			;

define NGIndSpeech     "@D.CaseType.reduced@"
       		       [ (0:["–"|"-"])
		       	 [ "+Encl:IndSp1":{მეთქი}
		       	 | "+Encl:IndSp2":{თქო}
		       	 | "+Encl:IndSp2":{თქვა} ]
		       | (0:["–"|"-"]) "+Encl:IndSp3":{ო} ] ;

# TODO: add enclitics, postpositions (use full inflectional morph.)
define foreignWord  [ \[georgianChar|" "]+ "+Foreign":0
       		    | \[georgianChar|" "]+ "+N":0 "+Prop":0 "+Foreign":0
		      0:"-"
		      [ "+Nom":{ი}
		      | "+Erg":{მა}
		      | "+Dat":{ს}
		      | "+Gen":{ის}
		      | "+Inst":{ით}
		      | "+Advb":{ად}
		      | [ "+Nom":{ები}
		      	| "+Erg":{ებმა}
		      	| "+Dat":{ებს}
		      	| "+Gen":{ების}
		      	| "+Inst":{ებით}
		      	| "+Advb":{ებად} ]
			"+Pl":0
		       ] ] ;

read regex foreignWord ;
save stack foreign-morph.fst
pop stack

define NGImp [[ {მი·სვლ[ა]/დი}:{მიდი}
       	      | {წა·სვლ[ა]/დი}:{წადი}
       	      | {მო·სვლ[ა]/დი}:{მოდი}
       	      | {წამო·სვლ[ა]/დი}:{წამოდი}
       	      | {წა·სვლ[ა]/დი}:{წა}
       	      | {წამო·სვლ[ა]/დი}:{წამო}
       	      | {ა·სვლ[ა]/დი}:{ადი}
       	      | {ამო·სვლ[ა]/დი}:{ამოდი}
       	      | {გა·სვლ[ა]/დი}:{გადი}
       	      | {გამო·სვლ[ა]/დი}:{გამოდი}
       	      | {შე·სვლ[ა]/დი}:{შედი}
       	      | {შემო·სვლ[ა]/დი}:{შემოდი}
       	      | {ჩა·სვლ[ა]/დი}:{ჩადი}
       	      | {ჩამო·სვლ[ა]/დი}:{ჩამოდი}
	      ]
	      ["+V" "+MedPass" "+Impv" "+Pv" "+<S>" "+<NomSubj>"]:0 ["+Subj2Sg":0 | "+Subj2Pl":{თ} ]
	     |
	      [ {და·ხედვ[ა]/ხე(დ)}:{დახე}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-IO>" "+<ErgSubj>" "+<DatObjTh>" "+Subj2Sg" "+ObjTh3"]:0 ]
	     |
	      [ {მი·ცემ[ა]/(ც)}:{მომე}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-DO3-OTh>" "+<ErgSubj>" "+<NomObj>" "+<DatObjTh>"
	       "+Subj2Sg" "+Obj3" "+ObjTh1Sg"]:0 ]
	     |
	      [ {და·ცლ[ა]/ცა(ლ)}:{დააცა}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-DO3-OTh>" "+<ErgSubj>" "+<NomObj>" "+<DatObjTh>"
	       "+Subj2Sg" "+Obj3" "+ObjTh3"]:0 ]
	     |
	      [ {და·ცლ[ა]/ცა(ლ)}:{დამაცა}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-DO3-OTh>" "+<ErgSubj>" "+<NomObj>" "+<DatObjTh>"
	       "+Subj2Sg" "+Obj3" "+ObjTh1Sg"]:0 ]
	     |
	      [ {მო·ტან[ა]/ტა(ნ)}:{მოიტა}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-DO>" "+<ErgSubj>" "+<NomObj>"
	       "+Subj2Sg" "+Obj3"]:0 ]
	     |
	      [ {მო·ტან[ა]/ტა(ნ)}:{მეიტა}
	      ["+V" "+Act" "+Impv" "+Pv" "+<S-DO>" "+<ErgSubj>" "+<NomObj>"
	       "+Subj2Sg" "+Obj3" "+Dialect" ]:0 ] ] ;

# NG

define negPrefix {არა-}|{არ-}|{აღარ-} ;

define NGCommon   [ verbMorphNG
       		  | NGImp
       		  # | (negPrefix) NounNoFlags
       		  | NounNoFlags
		  | NGAdv ] ;

# OK
read regex NGCommon ;
save stack ng-common.fst
pop stack

define NGIsolatedForms [ {დედილო}:{დედი} [ "+N" "+Hum" "+Voc" "+Trunc" "+Sg" ]:0 ] ;

define XVInterjection  [ჰ|ხ|ა|ე|ი|ო|უ|"-"]+ "+Interj":0 ;

define Converb	     [ "+Converb" (<-) "+Gen" "+Sg" "+DDat" "+DSg" || "+VN" _ .#. ] ;

define PartPartAbs   [ "+Abs" (<-) "+Dat" "+Att" || "+PastPart" (?) _ .#. ] ;

# S:2 Aor is Imper, except for სვლა; see NGImp
# Imperfective aorists cannot be imperative
define NGImperative  [ "+Impv" (<-) "+Aor" 
       		     || "/" ~[ვ "{" ი "}" დ] "+V" [ "+Act" | "+MedAct" | "+MedPass" | "+Pass" | "+Caus" ]
		     	_ \"+Imperfective" ?* [ "+S:2Sg" | "+S:2Pl" ] ] ;

define DetIndef	     [ "+Pron" "+Indef" "+Prox" <- "+A" || [{ამისთანა} | {ასეთ·ი} | {აგეთ·ი} ] _ ]
       		     .o.
		     [ "+Pron" "+Indef" "+Med" <- "+A" || [{მაგისთანა} | {ეგეთ·ი} ] _ ]
		     .o.
		     [ "+Pron" "+Indef" "+Dist" <- "+A" || [{იმისთანა} | {ისეთ·ი} ] _ ] ;

define foreignNamePrep [{ფონ}|{ფან}|{დე}|{დუ}|{ალ}] ["+Pp" "+Foreign"]:0 ;

define abbrevSuffixSg	  [ "+Sg":0
       			  | "+Dat":{-ს} "+Sg":0
       			  | "+Gen":{-ის} "+Sg":0
			  | "+Sg":0 ["+PP" "+PP:ში"]:{-ში}
			  | "+Sg":0 ["+PP" "+PP:დან"]:{-დან}
			  | "+Sg":0 ["+PP" "+PP:მდე"]:{-მდე}
			  | "+Sg":0 ["+PP" "+PP:თან"]:{-თან}
			  ] ;

define abbrevSuffixPl	  [ "+Pl":0
       			  | "+Dat":{-ს} "+Pl":0
       			  | "+Gen":{-ის} "+Pl":0
			  | "+Gen":{-თა}  "+Pl":0 "+OldPl":0
			  | "+Pl":0 ["+PP" "+PP:ში"]:{-ში}
			  | "+Pl":0 ["+PP" "+PP:დან"]:{-დან}
			  | "+Pl":0 ["+PP" "+PP:მდე"]:{-მდე}
			  | "+Pl":0 ["+PP" "+PP:თან"]:{-თან}
			  ] ;

# see geo-tokenize.regex and ng-abbrev-dot.txt for tokenization of dotted abbrevs
define Abbrev 		[ [ {წ[ე]ლ·ი}:{წ.}
			  | {საათ·ი}:{სთ}
       			  ] ["+N" "+Temp" ]:0 abbrevSuffixSg
			 |[ {წ[ე]ლ·ი}:{წწ}(0:".")
			  | {წ[ე]ლ·ი}:{წ.წ.}
			  | {საუკუნ[ე]}:{სს}(0:".")
       			  ] ["+N" "+Temp"]:0 abbrevSuffixPl
			 |[ {სააქციო საზოგადოებ[ა]}:{სს}
       			  ] ["+N" "+Qual"]:0 abbrevSuffixSg
			 |[ {ქალაქ·ი}:{ქ.}
			  | {მდინარ[ე]}:{მდ.}
			  ] ["+N" "+Qual"]:0 abbrevSuffixSg
			 |[ {თბილის·ი}:{თბ.}
			  ] ["+N" "+Prop" "+Top" "+Place"]:0 abbrevSuffixSg
			 |[ {ტფილის·ი}:{ტფ.}
			  ] ["+N" "+Prop" "+Top" "+Place" "+Old"]:0 abbrevSuffixSg
			 |[ # {მანათ·ი}:{მან.} |
			    {წელთაღრიცხვ[ა]}:{წ.}
			  | {გვერდ·ი}:{გვ.}
			  ] ["+N" "+Sg"]:0
			 |[ {ბატონ·ი}:[{ბ-ნ}(ი)]
       			  | {ქალბატონ·ი}:[{ქ-ნ}(ი)]
       			  | {პროფესორ·ი}:{პროფ}
       			  | {აკადემიქოს·ი}:{აკად}
			  ] ["+N" "+Hum" "+Qual"]:0
			 |[ {შინაგან საქმეთა}:{შს}
			  ] ["+A"]:0
			 |[ {ბატონ·ი}:{ბ-ნ}
       			  | {მეტრ·ი}:{მ} # fixme: these can be inflected
       			  | {მეტრ·ი}:{მ.} # fixme: these can be inflected
       			  | {კვადრატულ·ი მეტრ·ი}:{მ²}
       			  | {მილიმეტრ·ი}:{მმ}
       			  | {კვადრატულ·ი მილიმეტრ·ი}:{მმ²}
       			  | {სანტიმეტრ·ი}:{სმ}
       			  | {კვადრატულ·ი სანტიმეტრ·ი}:{სმ²}
       			  | {კუბურ·ი სანტიმეტრ·ი}:{სმ³}
       			  | {კუბურ·ი მეტრ·ი}:{მ³}
       			  | {კილომეტრ·ი}:{კმ}
       			  | {კვადრატულ·ი კილომეტრ·ი}:{კმ²}
       			  | {კუბურ·ი კილომეტრ·ი}:{კმ³}
			  | {კილოვატ-საათ·ი}:{კვტსთ} # inflected!
       			  | {კილოგრამ·ი}:{კგ}(0:".")
			  | {მილიონ·ი}:{მლნ}
			  | {მილიარდ·ი}:{მლრდ}
			  ] ["+N" ["+Meas"|"+Sg"]]:0
			 |[ {სხვა}:{სხვ.}
			  | {მისთანა}:{მისთ.}
			  | {უფროს·ი}:{უფ.}
			  | {ძველ·ი}:{ძვ.}
			  | {ახალ·ი}:{ახ.}
			  | {ლათინურ·ი}:{ლათ.}
			  | {ბერძნულ·ი}:{ბერძნ.}
			  | {ინგლისურ·ი}:{ინგლ.}
			  | {რუსულ·ი}:{რუს.}
			  | {უკრაინულ·ი}:{უკრ.}
			  | {წმინდა}:{წმ.}
			  ] ["+A"]:0
			 |[ {ჩვენ·ი}:{ჩვ.} 
			  ] ["+Pron" "+Poss" "+Poss1Pl"]:0
			 |[ {და ასე შემდეგ}:{და ა.შ.} 
			  | {ასე შემდეგ}:{ა.შ.} 
			  | {ესე იგი}:{ე.ი.} 
			  ] "+Adv":0
			 |[ {ეგრეთ წოდებულ·ი}:{ე.წ.} 
			  ] ["+A" "+Att"]:0
			 |[ {ამ წლის}:{ა.წ.}
			  | {დაახლოებით}:{დაახლ.}
			  | {დაახლოებით}:{დაახ.}
			  ] ["+Adv"]:0
			 |[ Character "."
			    [ "+N" "+Prop" "+Anthr" ]:0 ]
			 |[ [{ივ.}|{ელ.}]
			    [ "+N" "+Prop" "+Anthr" "+FirstName" ]:0 ] ]
			 "+Abbrev":0 ;

# OBS: OGLetterNum has to come after all character normalization has been done

# NewG, OldG come from phonotactics.regex
define NewGeorgian    [ [ ვ <- u ]
   	  	        .o. [ "+A" "+Part" <- "+Part" ] # todo: move elsewhere
			.o. [ "+N" "+VN" <- "+VN" ]
   	  	        .o. DetIndef
			.o. Converb
			.o. PartPartAbs
   	  		.o. NGImperative
   	  	      	.o. simplifyFrame
		      	.o. normalizeNGTags
			.o. NGCommon
			.o. NewG ] ( ["+Encl:კი" "+Foc"]:{-კი} ) ( NGIndSpeech )
		      | XVInterjection
		      | NGIsolatedForms
   	  	      | CardinalDigits ( (0:"-") cardPP )
		      | CardinalDigitsRange ( (0:"-") cardPP )
		      | OrdinalDigits ( (0:"-") cardPP )
		      | TimeDigits
		      | Punctuation
		      | NGExtractedInterj 
		      | OGLetterNum | RomanNum | Abbrev | foreignNamePrep ;

undefine NGCommon ;

read regex NewGeorgian ;

# debug
# save stack ng-common-debug.fst

# used for reduplication
# save stack georgian-ng-genus-frame.fst

   echo > eliminate flag Frame
   eliminate flag Frame
   #echo > eliminate flag Deixis
   #eliminate flag Deixis
   #echo > eliminate flag DDL
   #eliminate flag DDL
   echo > eliminate flag StemType
   eliminate flag StemType
   echo > eliminate flag SyncStem
   eliminate flag SyncStem
   echo > eliminate flag Lang
   eliminate flag Lang
   echo > eliminate flag Approx
   eliminate flag Approx
   echo > eliminate flag CaseType
   eliminate flag CaseType
   #eliminate flag RedDirPv 
   #eliminate flag Reduplication

# save stack ng-morph.fst

define NGMorph ;
# used in reduplication.regex
read regex [?* ["+Act"|"+Pass"|"+MedAct"|"+MedPass"] ?*] .o. NGMorph .o. [ "#" -> 0 || _ ? ] ;
save stack redup-ng.fst
pop stack

define NGNegNouns negPrefix [ [ ?* "+N" ?* ] .o. NGMorph ] ; 

read regex 	\"+Redup"+
     	    .o. [ NGMorph | NGNegNouns ]
     	    .o. [ "#" -> 0 || _ ? ] ;

save stack georgian-morph-ng.fst
pop stack

# needed for verbs with guessed preverbs
read regex \"+Redup"+ .o. NGMorph ;
save stack georgian-morph-ng-pv.fst
pop stack

define Preverbs [ {ა} | {ამო} | {აღ} | {აღმო} | {გა} | {გად} | {გადა} | {გადმო}
       		| {გამო} | {გან} | {გარდ} | {გარდა} | {გარდმო} | {გარემო} | {გარსშემო}
		| {გარშემო} | {და} | {დამო} | {ზეწამო} | {თანა} | {იავარ} | {იძულებულ}
		| {მი} | {მიმო} | {მო} | {ნათელ} | {სრულ} | {უარ} | {უგულებელ}
		| {უვნებელ} | {უზრუნველ} | {უკვდავ} | {უკუ} | {უჩინარ} | {ღაღად}
		| {შე} | {შემო} | {შეურაცხ} | {შთა} | {ჩა} | {ჩამო} | {ცხად}
		| {ძალ} | {წა} | {წამო} | {წარ} | {წარმო} | {წინა} | {წინააღ} | {ხელ} ] ;

define pvVerbSfx     [ 0 <- \"-" \\ .#. \"-"* _ "-" ]
       		 .o. [ \"+Redup"+ .o. NGMorph ] .o. [ ?+ "#" ?* ] 
       		 .o. [ ? -> 0 \\ _ "#" ] .o. [ "#" -> 0 ] ;

read regex Preverbs pvVerbSfx "+G":0 ;
save stack georgian-verb-ng-guessed.fst
pop stack

undefine NewGeorgian ;


# but: ოთარაანთ -> ოთარ !
define AnthrColl georgianChar* [ა|ე|ი] ["+Prop" "+Anthr" "+Coll" "+Gen"]:{ანთ} ;
read regex AnthrColl ;
save stack anthr-coll.fst
pop stack

# EOF